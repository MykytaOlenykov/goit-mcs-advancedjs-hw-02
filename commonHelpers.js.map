{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport '../css/common.css';\n\nclass Element {\n  constructor(selector) {\n    this.ref = document.querySelector(selector);\n  }\n}\n\nclass ElementController extends Element {\n  isDisabled() {\n    return this.ref.hasAttribute('disabled');\n  }\n\n  disable() {\n    this.ref.setAttribute('disabled', '');\n  }\n\n  enable() {\n    this.ref.removeAttribute('disabled');\n  }\n}\n\nclass ButtonController extends ElementController {\n  #onClickCallback = null;\n\n  onClick(callback) {\n    if (this.#onClickCallback) {\n      this.ref.removeEventListener('click', this.#onClickCallback);\n    }\n\n    this.#onClickCallback = e => {\n      if (!this.isDisabled()) callback(e);\n    };\n\n    this.ref.addEventListener('click', this.#onClickCallback);\n  }\n}\n\nclass TimeViewElement extends Element {\n  update(value) {\n    this.ref.textContent = value;\n  }\n}\n\nclass TimerView {\n  #daysViewElement = null;\n  #hoursViewElement = null;\n  #minutesViewElement = null;\n  #secondsViewElement = null;\n\n  constructor({\n    daysViewElement = null,\n    hoursViewElement = null,\n    minutesViewElement = null,\n    secondsViewElement = null,\n  }) {\n    this.#daysViewElement = daysViewElement;\n    this.#hoursViewElement = hoursViewElement;\n    this.#minutesViewElement = minutesViewElement;\n    this.#secondsViewElement = secondsViewElement;\n  }\n\n  refresh(timeMs) {\n    const { days, hours, minutes, seconds } = this.convertMs(timeMs);\n    this.#daysViewElement?.update(this.addLeadingZero(days));\n    this.#hoursViewElement?.update(this.addLeadingZero(hours));\n    this.#minutesViewElement?.update(this.addLeadingZero(minutes));\n    this.#secondsViewElement?.update(this.addLeadingZero(seconds));\n  }\n\n  convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n  }\n\n  addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nclass Timer {\n  #selectedDatetime = new Date();\n  #intervalId = null;\n  #onStopCallback = null;\n  #view;\n\n  constructor(view) {\n    this.#view = view;\n  }\n\n  get selectedDatetime() {\n    return this.#selectedDatetime;\n  }\n\n  set selectedDatetime(newSelectedDatetime) {\n    const isValidSelectedDatetime = this.validateDatetime(newSelectedDatetime);\n    if (!isValidSelectedDatetime) throw new Error('Invalid selectedDatetime');\n\n    if (this.#intervalId === null) {\n      this.#selectedDatetime = newSelectedDatetime;\n    } else {\n      const message = 'Timer started.';\n      iziToast.error({ position: 'topRight', message });\n      throw new Error(message);\n    }\n  }\n\n  onStop(callback) {\n    this.#onStopCallback = callback;\n  }\n\n  start() {\n    if (!this.validateDatetime(this.#selectedDatetime)) {\n      return false;\n    }\n\n    const datetimeDelta = this.calculateDeltaDatetime();\n    this.#view.refresh(datetimeDelta);\n\n    this.#intervalId = setInterval(() => {\n      const datetimeDelta = this.calculateDeltaDatetime();\n      this.#view.refresh(datetimeDelta);\n\n      if (datetimeDelta <= 0) {\n        this.stop();\n        iziToast.success({\n          position: 'topRight',\n          message: 'The timer has finished its work.',\n        });\n        return;\n      }\n    }, 1000);\n\n    return true;\n  }\n\n  stop() {\n    clearInterval(this.#intervalId);\n    this.#intervalId = null;\n    this.#view.refresh(0);\n    this.#onStopCallback?.();\n  }\n\n  validateDatetime(datetime) {\n    const isValidDatetime = datetime > new Date();\n    if (!isValidDatetime) {\n      iziToast.error({\n        position: 'topRight',\n        message: 'Please choose a date in the future',\n      });\n    }\n    return isValidDatetime;\n  }\n\n  calculateDeltaDatetime() {\n    const datetimeDelta = this.#selectedDatetime - new Date();\n    return datetimeDelta < 0 ? 0 : datetimeDelta;\n  }\n}\n\nconst datetimePickerElement = new ElementController('input#datetime-picker');\nconst buttonElement = new ButtonController('button[data-start]');\nconst timerView = new TimerView({\n  daysViewElement: new TimeViewElement('[data-days]'),\n  hoursViewElement: new TimeViewElement('[data-hours]'),\n  minutesViewElement: new TimeViewElement('[data-minutes]'),\n  secondsViewElement: new TimeViewElement('[data-seconds]'),\n});\nconst timer = new Timer(timerView);\n\nbuttonElement.disable();\nbuttonElement.onClick(handleStartTimer);\n\ntimer.onStop(handleStopTimer);\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: timer.selectedDatetime,\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    handleChangeDatetime(selectedDates[0]);\n  },\n};\n\nflatpickr(datetimePickerElement.ref, options);\n\nfunction handleChangeDatetime(selectedDatetime) {\n  try {\n    timer.selectedDatetime = selectedDatetime;\n    buttonElement.enable();\n  } catch (error) {\n    buttonElement.disable();\n  }\n}\n\nfunction handleStartTimer() {\n  buttonElement.disable();\n  const started = timer.start();\n  started && datetimePickerElement.disable();\n}\n\nfunction handleStopTimer() {\n  datetimePickerElement.enable();\n}\n"],"names":["Element","selector","ElementController","ButtonController","__privateAdd","_onClickCallback","callback","__privateGet","__privateSet","e","TimeViewElement","value","TimerView","daysViewElement","hoursViewElement","minutesViewElement","secondsViewElement","_daysViewElement","_hoursViewElement","_minutesViewElement","_secondsViewElement","timeMs","days","hours","minutes","seconds","_a","_b","_c","_d","ms","Timer","view","_selectedDatetime","_intervalId","_onStopCallback","_view","newSelectedDatetime","message","iziToast","datetimeDelta","datetime","isValidDatetime","datetimePickerElement","buttonElement","timerView","timer","handleStartTimer","handleStopTimer","options","selectedDates","handleChangeDatetime","flatpickr","selectedDatetime"],"mappings":"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"}